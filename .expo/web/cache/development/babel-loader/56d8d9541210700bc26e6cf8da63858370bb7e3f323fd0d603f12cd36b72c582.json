{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"icon\", \"isPassword\", \"hidePassword\", \"setHidePassword\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { Formik } from 'formik';\nimport View from \"react-native-web/dist/exports/View\";\nimport { MaterialIcons, Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\nimport { EvilIcons } from '@expo/vector-icons';\nimport KeyboardAvoidingWrapper from \"./../components/KeyboardAvoidingWrapper\";\nimport { StyledContainer, InnerContainer, PageLogo, PageTitle, SubTitle, StyledFormArea, LeftIcon, RightIcon, StyledButton, StyledInputLabel, StyledTextInput, ButtonText, Colors, MsgBox, Line, ExtraView, ExtraText, TextLink, TextLinkContent } from \"./../components/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar brand = Colors.brand,\n  darkLight = Colors.darkLight,\n  primary = Colors.primary;\nvar Login = function Login() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    hidePassword = _useState2[0],\n    setHidePassword = _useState2[1];\n  return _jsx(KeyboardAvoidingWrapper, {\n    children: _jsxs(StyledContainer, {\n      children: [_jsx(StatusBar, {\n        style: \"dark\"\n      }), _jsxs(InnerContainer, {\n        children: [_jsx(PageLogo, {\n          resizeMode: \"cover\",\n          source: require(\"./../assets/img/img6.png\")\n        }), _jsx(PageTitle, {\n          children: \" Dossier Medicale \"\n        }), _jsx(SubTitle, {\n          children: \"Account Login \"\n        }), _jsx(Formik, {\n          initialValues: {\n            email: '',\n            password: ''\n          },\n          onSubmit: function onSubmit(values) {\n            console.log(values);\n          },\n          children: function children(_ref) {\n            var handleChange = _ref.handleChange,\n              handleBlur = _ref.handleBlur,\n              handleSubmit = _ref.handleSubmit,\n              values = _ref.values;\n            return _jsxs(StyledFormArea, {\n              children: [_jsx(MyTextInput, {\n                label: \"Adresse Email\",\n                icon: \"mail\",\n                placeholder: \"andyj@gmail.com\",\n                placeholderTextColor: darkLight,\n                onChangeText: handleChange('email'),\n                onBlur: handleBlur('email'),\n                value: values.email,\n                keyboardType: \"email-address\"\n              }), _jsx(MyTextInput, {\n                label: \"Mot de passe\",\n                icon: \"lock\",\n                placeholder: \"* * * * * * *\",\n                placeholderTextColor: darkLight,\n                onChangeText: handleChange('password'),\n                onBlur: handleBlur('password'),\n                value: values.password,\n                secureTextEntry: hidePassword,\n                isPassword: true,\n                hidePassword: hidePassword,\n                setHidePassword: setHidePassword\n              }), _jsx(MsgBox, {\n                children: \"...\"\n              }), _jsx(StyledButton, {\n                onPress: handleSubmit,\n                children: _jsx(ButtonText, {\n                  children: \"Login\"\n                })\n              }), _jsx(Line, {}), _jsxs(StyledButton, {\n                google: true,\n                onPress: handleSubmit,\n                children: [_jsx(Fontisto, {\n                  name: \"google\",\n                  color: primary,\n                  size: 25\n                }), _jsx(ButtonText, {\n                  google: true,\n                  children: \"Sign in with Google\"\n                })]\n              }), _jsxs(ExtraView, {\n                children: [_jsx(ExtraText, {\n                  children: \"Don't have an account already?\"\n                }), _jsx(TextLink, {\n                  children: _jsx(TextLinkContent, {\n                    children: \"Signup\"\n                  })\n                })]\n              })]\n            });\n          }\n        })]\n      })]\n    })\n  });\n};\nvar MyTextInput = function MyTextInput(_ref2) {\n  var label = _ref2.label,\n    icon = _ref2.icon,\n    isPassword = _ref2.isPassword,\n    hidePassword = _ref2.hidePassword,\n    setHidePassword = _ref2.setHidePassword,\n    props = _objectWithoutProperties(_ref2, _excluded);\n  return _jsxs(View, {\n    children: [_jsx(LeftIcon, {\n      children: _jsx(Octicons, {\n        name: icon,\n        size: 24,\n        color: brand\n      })\n    }), _jsxs(StyledInputLabel, {\n      children: [\" \", label]\n    }), _jsx(StyledTextInput, _objectSpread({}, props)), isPassword && _jsx(RightIcon, {\n      onPress: function onPress() {\n        return setHidePassword(!hidePassword);\n      },\n      children: _jsx(Ionicons, {\n        name: hidePassword ? 'md-eye-off' : 'md-eye',\n        size: 24,\n        color: darkLight\n      })\n    })]\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","useState","StatusBar","Formik","MaterialIcons","Octicons","Ionicons","Fontisto","AntDesign","EvilIcons","KeyboardAvoidingWrapper","StyledContainer","InnerContainer","PageLogo","PageTitle","SubTitle","StyledFormArea","LeftIcon","RightIcon","StyledButton","StyledInputLabel","StyledTextInput","ButtonText","Colors","MsgBox","Line","ExtraView","ExtraText","TextLink","TextLinkContent","brand","darkLight","primary","Login","hidePassword","setHidePassword","require","email","password","values","console","log","handleChange","handleBlur","handleSubmit","MyTextInput","label","icon","isPassword","props"],"sources":["C:/Users/mokra/application/screens/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { Formik } from 'formik';\r\nimport { View } from 'react-native';\r\nimport { MaterialIcons, Octicons, Ionicons, Fontisto } from '@expo/vector-icons';\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport { EvilIcons } from '@expo/vector-icons';\r\nimport KeyboardAvoidingWrapper from './../components/KeyboardAvoidingWrapper';\r\n\r\n\r\n\r\nimport {\r\n    StyledContainer,\r\n    InnerContainer,\r\n    PageLogo,\r\n    PageTitle,\r\n    SubTitle,\r\n    StyledFormArea,\r\n    LeftIcon,\r\n    RightIcon,\r\n    StyledButton,\r\n    StyledInputLabel,\r\n    StyledTextInput,\r\n\r\n    ButtonText,\r\n    Colors,\r\n    MsgBox,\r\n    Line,\r\n    ExtraView,\r\n    ExtraText,\r\n    TextLink,\r\n    TextLinkContent\r\n\r\n\r\n} from './../components/styles';\r\nconst { brand, darkLight, primary } = Colors;\r\n\r\nconst Login = () => {\r\n    const [hidePassword, setHidePassword] = useState(true);\r\n\r\n    return (\r\n        <KeyboardAvoidingWrapper>\r\n            <StyledContainer>\r\n                <StatusBar style=\"dark\" />\r\n                <InnerContainer>\r\n                    <PageLogo resizeMode=\"cover\" source={require('./../assets/img/img6.png')} />\r\n                    <PageTitle> Dossier Medicale </PageTitle>\r\n                    <SubTitle>Account Login </SubTitle>\r\n\r\n                    <Formik\r\n                        initialValues={{email: '', password: ''}}\r\n                        onSubmit={(values) => {\r\n                            console.log(values);\r\n                        }}\r\n                    >\r\n                        {({ handleChange, handleBlur, handleSubmit, values }) => (<StyledFormArea>\r\n                            <MyTextInput\r\n                                label=\"Adresse Email\"\r\n                                icon='mail'\r\n                                placeholder=\"andyj@gmail.com\"\r\n                                placeholderTextColor={darkLight}\r\n                                onChangeText={handleChange('email')}\r\n                                onBlur={handleBlur('email')}\r\n                                value={values.email}\r\n                                keyboardType=\"email-address\"\r\n                            />\r\n                            <MyTextInput\r\n                                label=\"Mot de passe\"\r\n                                icon=\"lock\"\r\n                                placeholder=\"* * * * * * *\"\r\n                                placeholderTextColor={darkLight}\r\n                                onChangeText={handleChange('password')}\r\n                                onBlur={handleBlur('password')}\r\n                                value={values.password}\r\n                                secureTextEntry={hidePassword}\r\n                                isPassword={true}\r\n                                hidePassword={hidePassword}\r\n                                setHidePassword={setHidePassword}\r\n                            />\r\n\r\n                            <MsgBox>\r\n                                ...\r\n                            </MsgBox>\r\n                            <StyledButton onPress={handleSubmit}>\r\n                                <ButtonText>\r\n                                    Login\r\n                                </ButtonText>\r\n\r\n                            </StyledButton>\r\n                            <Line />\r\n                            <StyledButton google={true} onPress={handleSubmit}>\r\n                                <Fontisto name=\"google\" color={primary} size={25} />\r\n                                <ButtonText google={true}>\r\n                                    Sign in with Google\r\n                                </ButtonText>\r\n                            </StyledButton>\r\n                            <ExtraView>\r\n                                <ExtraText>\r\n                                    Don't have an account already?\r\n                                </ExtraText>\r\n                                <TextLink>\r\n                                    <TextLinkContent>\r\n                                        Signup\r\n                                    </TextLinkContent>\r\n                                </TextLink>\r\n                            </ExtraView>\r\n\r\n\r\n\r\n                        </StyledFormArea>)}\r\n                    </Formik>\r\n                </InnerContainer>\r\n            </StyledContainer>\r\n        </KeyboardAvoidingWrapper>\r\n\r\n\r\n    );\r\n};\r\nconst MyTextInput = ({ label, icon, isPassword, hidePassword, setHidePassword, ...props }) => {\r\n    return (\r\n        <View>\r\n            <LeftIcon>\r\n                <Octicons name={icon} size={24} color={brand} />\r\n\r\n            </LeftIcon>\r\n            <StyledInputLabel> {label}</StyledInputLabel>\r\n            <StyledTextInput  {...props} />\r\n            {isPassword && (\r\n                <RightIcon onPress={() => setHidePassword(!hidePassword)}>\r\n                    <Ionicons name={hidePassword ? 'md-eye-off' : 'md-eye'} size={24} color={darkLight} />\r\n                </RightIcon>\r\n\r\n            )}\r\n\r\n        </View>\r\n    );\r\n\r\n};\r\nexport default Login; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}