{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"icon\", \"isPassword\", \"hidePassword\", \"setHidePassword\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { Formik } from 'formik';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Octicons, Ionicons } from '@expo/vector-icons';\nimport KeyboardAvoidingWrapper from \"./../components/KeyboardAvoidingWrapper\";\nimport { StyledContainer, InnerContainer, PageLogo, PageTitle, SubTitle, StyledFormArea, LeftIcon, RightIcon, StyledButton, StyledInputLabel, StyledTextInput, ButtonText, Colors, MsgBox, Line, ExtraView, ExtraText, TextLink, TextLinkContent } from \"../components/styles\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar green = Colors.green,\n  brand = Colors.brand,\n  darkLight = Colors.darkLight,\n  primary = Colors.primary;\nvar Signup = function Signup() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    hidePassword = _useState2[0],\n    setHidePassword = _useState2[1];\n  var MyTextInput = function MyTextInput(_ref) {\n    var label = _ref.label,\n      icon = _ref.icon,\n      isPassword = _ref.isPassword,\n      hidePassword = _ref.hidePassword,\n      setHidePassword = _ref.setHidePassword,\n      props = _objectWithoutProperties(_ref, _excluded);\n    return _jsxs(View, {\n      children: [_jsxs(StyledInputLabel, {\n        children: [\" \", label]\n      }), _jsx(StyledTextInput, _objectSpread({}, props)), _jsx(LeftIcon, {\n        children: _jsx(Octicons, {\n          name: icon,\n          size: 24,\n          color: brand\n        })\n      }), isPassword && _jsx(RightIcon, {\n        onPress: function onPress() {\n          return setHidePassword(!hidePassword);\n        },\n        children: _jsx(Ionicons, {\n          name: hidePassword ? 'md-eye-off' : 'md-eye',\n          size: 24,\n          color: darkLight\n        })\n      })]\n    });\n  };\n  return _jsx(KeyboardAvoidingWrapper, {\n    children: _jsxs(StyledContainer, {\n      children: [_jsx(StatusBar, {\n        style: \"dark\"\n      }), _jsxs(InnerContainer, {\n        children: [_jsx(PageLogo, {\n          resizeMode: \"cover\",\n          source: require(\"./../assets/img/img8.png\")\n        }), _jsx(SubTitle, {\n          children: \"Account Signup \"\n        }), _jsx(Formik, {\n          initialValues: {\n            fullName: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n          },\n          onSubmit: function onSubmit(values) {\n            return console.log(values);\n          },\n          children: function children(_ref2) {\n            var handleChange = _ref2.handleChange,\n              handleBlur = _ref2.handleBlur,\n              handleSubmit = _ref2.handleSubmit,\n              values = _ref2.values;\n            return _jsxs(StyledFormArea, {\n              children: [_jsx(MyTextInput, {\n                label: \"Username\",\n                icon: \"person\",\n                placeholder: \"Mariem \",\n                placeholderTextColor: darkLight,\n                onChangeText: handleChange('fullName'),\n                onBlur: handleBlur('fullName'),\n                value: values.fullName\n              }), _jsx(MyTextInput, {\n                label: \"Adresse Email\",\n                icon: \"mail\",\n                placeholder: \"andyj@gmail.com\",\n                placeholderTextColor: darkLight,\n                onChangeText: handleChange('email'),\n                onBlur: handleBlur('email'),\n                value: values.email,\n                keyboardType: \"email-address\"\n              }), _jsx(MyTextInput, {\n                label: \"Mot de passe\",\n                icon: \"lock\",\n                placeholder: \"* * * * * * *\",\n                placeholderTextColor: darkLight,\n                onChangeText: handleChange('password'),\n                onBlur: handleBlur('password'),\n                value: values.password,\n                secureTextEntry: hidePassword,\n                isPassword: true,\n                hidePassword: hidePassword,\n                setHidePassword: setHidePassword\n              }), _jsx(MyTextInput, {\n                label: \"Confirmer mot de passe\",\n                icon: \"lock\",\n                placeholder: \"* * * * * * *\",\n                placeholderTextColor: darkLight,\n                onChangeText: handleChange('confirmPassword'),\n                onBlur: handleBlur('confirmPassword'),\n                value: values.confirmPassword,\n                secureTextEntry: hidePassword,\n                isPassword: true,\n                hidePassword: hidePassword,\n                setHidePassword: setHidePassword\n              }), _jsx(MsgBox, {\n                children: \"...\"\n              }), _jsx(StyledButton, {\n                onPress: handleSubmit,\n                children: _jsx(ButtonText, {\n                  children: \"Login\"\n                })\n              }), _jsx(Line, {}), _jsxs(ExtraView, {\n                children: [_jsx(ExtraText, {\n                  children: \"Already have an account ?\"\n                }), _jsx(TextLink, {\n                  children: _jsx(TextLinkContent, {\n                    children: \"Login\"\n                  })\n                })]\n              })]\n            });\n          }\n        })]\n      })]\n    })\n  });\n};\nexport default Signup;","map":{"version":3,"names":["React","useState","StatusBar","Formik","Octicons","Ionicons","KeyboardAvoidingWrapper","StyledContainer","InnerContainer","PageLogo","PageTitle","SubTitle","StyledFormArea","LeftIcon","RightIcon","StyledButton","StyledInputLabel","StyledTextInput","ButtonText","Colors","MsgBox","Line","ExtraView","ExtraText","TextLink","TextLinkContent","green","brand","darkLight","primary","Signup","hidePassword","setHidePassword","MyTextInput","label","icon","isPassword","props","require","fullName","email","password","confirmPassword","values","console","log","handleChange","handleBlur","handleSubmit"],"sources":["C:/Users/mokra/application/screens/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { Formik } from 'formik';\r\nimport { View } from 'react-native';\r\nimport {  Octicons, Ionicons } from '@expo/vector-icons';\r\nimport KeyboardAvoidingWrapper from './../components/KeyboardAvoidingWrapper';\r\nimport {\r\n    StyledContainer,\r\n    InnerContainer,\r\n    PageLogo,\r\n    PageTitle,\r\n    SubTitle,\r\n    StyledFormArea,\r\n    LeftIcon,\r\n    RightIcon,\r\n    StyledButton,\r\n    StyledInputLabel,\r\n    StyledTextInput,\r\n\r\n    ButtonText,\r\n    Colors,\r\n    MsgBox,\r\n    Line,\r\n    ExtraView,\r\n    ExtraText,\r\n    TextLink,\r\n    TextLinkContent\r\n\r\n\r\n} from '../components/styles';\r\nconst { green, brand, darkLight, primary } = Colors;\r\n\r\n\r\nconst Signup = () => {\r\n    const [hidePassword, setHidePassword] = useState(true);\r\n\r\n    const MyTextInput = ({ label, icon, isPassword, hidePassword, setHidePassword, ...props }) => {\r\n        return (\r\n            <View>\r\n                <StyledInputLabel> {label}</StyledInputLabel>\r\n                <StyledTextInput  {...props} />\r\n                <LeftIcon>\r\n                    <Octicons name={icon} size={24} color={brand} />\r\n                </LeftIcon>\r\n                {isPassword && (\r\n                    <RightIcon onPress={() => setHidePassword(!hidePassword)}>\r\n                        <Ionicons name={hidePassword ? 'md-eye-off' : 'md-eye'} size={24} color={darkLight} />\r\n                    </RightIcon>\r\n\r\n                )}\r\n\r\n            </View>\r\n        );\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <KeyboardAvoidingWrapper>\r\n            <StyledContainer>\r\n                <StatusBar style=\"dark\" />\r\n                <InnerContainer>\r\n                    <PageLogo resizeMode=\"cover\" source={require('./../assets/img/img8.png')} />\r\n                    <SubTitle>Account Signup </SubTitle>\r\n\r\n\r\n\r\n                    <Formik\r\n                        initialValues={{ fullName: '', email: '', password: '', confirmPassword: '' }}\r\n                        onSubmit={(values) => console.log(values)}\r\n                    >\r\n                        {({ handleChange, handleBlur, handleSubmit, values }) => (\r\n                            <StyledFormArea>\r\n                                <MyTextInput\r\n                                    label=\"Username\"\r\n                                    icon=\"person\"\r\n                                    placeholder=\"Mariem \"\r\n                                    placeholderTextColor={darkLight}\r\n                                    onChangeText={handleChange('fullName')}\r\n                                    onBlur={handleBlur('fullName')}\r\n                                    value={values.fullName}\r\n\r\n                                />\r\n                                <MyTextInput\r\n                                    label=\"Adresse Email\"\r\n                                    icon=\"mail\"\r\n                                    placeholder=\"andyj@gmail.com\"\r\n                                    placeholderTextColor={darkLight}\r\n                                    onChangeText={handleChange('email')}\r\n                                    onBlur={handleBlur('email')}\r\n                                    value={values.email}\r\n                                    keyboardType=\"email-address\"\r\n                                />\r\n                                <MyTextInput\r\n                                    label=\"Mot de passe\"\r\n                                    icon=\"lock\"\r\n                                    placeholder=\"* * * * * * *\"\r\n                                    placeholderTextColor={darkLight}\r\n                                    onChangeText={handleChange('password')}\r\n                                    onBlur={handleBlur('password')}\r\n                                    value={values.password}\r\n                                    secureTextEntry={hidePassword}\r\n                                    isPassword={true}\r\n                                    hidePassword={hidePassword}\r\n                                    setHidePassword={setHidePassword}\r\n                                />\r\n                                <MyTextInput\r\n                                    label=\"Confirmer mot de passe\"\r\n                                    icon=\"lock\"\r\n                                    placeholder=\"* * * * * * *\"\r\n                                    placeholderTextColor={darkLight}\r\n                                    onChangeText={handleChange('confirmPassword')}\r\n                                    onBlur={handleBlur('confirmPassword')}\r\n                                    value={values.confirmPassword}\r\n                                    secureTextEntry={hidePassword}\r\n                                    isPassword={true}\r\n                                    hidePassword={hidePassword}\r\n                                    setHidePassword={setHidePassword}\r\n                                />\r\n\r\n                                <MsgBox>\r\n                                    ...\r\n                                </MsgBox>\r\n                                <StyledButton onPress={handleSubmit}>\r\n                                    <ButtonText>\r\n                                        Login\r\n                                    </ButtonText>\r\n\r\n                                </StyledButton>\r\n                                <Line />\r\n                                <ExtraView>\r\n                                    <ExtraText>\r\n                                        Already have an account ?\r\n                                    </ExtraText>\r\n                                    <TextLink>\r\n                                        <TextLinkContent>\r\n                                            Login\r\n                                        </TextLinkContent>\r\n                                    </TextLink>\r\n                                </ExtraView>\r\n\r\n\r\n\r\n                            </StyledFormArea>)}\r\n                    </Formik>\r\n                </InnerContainer>\r\n            </StyledContainer>\r\n        </KeyboardAvoidingWrapper>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Signup; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}